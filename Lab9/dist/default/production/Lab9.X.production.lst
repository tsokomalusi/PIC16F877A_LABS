

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 19 20:50:16 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     000E                     _TMR1           set	14
   176     005F                     _GIE            set	95
   177     005E                     _PEIE           set	94
   178     0060                     _TMR1IF         set	96
   179     0080                     _TMR1ON         set	128
   180     0085                     _T1CKPS1        set	133
   181     0084                     _T1CKPS0        set	132
   182     0081                     _TMR1CS         set	129
   183     0038                     _RC0            set	56
   184     0460                     _TMR1IE         set	1120
   185     0438                     _TRISC0         set	1080
   186                           
   187                           	psect	cinit
   188     000F                     start_initialization:	
   189                           ; #config settings
   190                           
   191     000F                     __initialization:
   192                           
   193                           ; Clear objects allocated to COMMON
   194     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   195     0010                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     0010                     __end_of__initialization:
   199     0010  0183               	clrf	3
   200     0011  120A  118A  2831   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMMON
   203     0072                     __pbssCOMMON:
   204     0072                     _count:
   205     0072                     	ds	1
   206                           
   207                           	psect	cstackCOMMON
   208     0070                     __pcstackCOMMON:
   209     0070                     ?_main:
   210     0070                     ?_ISR:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ??_ISR:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	2
   219     0072                     ??_main:
   220                           
   221                           	psect	maintext
   222     0031                     __pmaintext:	
   223                           ; 1 bytes @ 0x2
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 19 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		None
   238 ;; Tracked objects:
   239 ;;		On entry : B00/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   243 ;;      Params:         0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels required when called: 1
   249 ;; This function calls:
   250 ;;		Nothing
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256     0031                     _main:	
   257                           ;psect for function _main
   258                           
   259     0031                     l583:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: []
   262                           
   263                           
   264                           ;main.c: 23:     TRISC0 = 0;
   265     0031  1683               	bsf	3,5	;RP0=1, select bank1
   266     0032  1303               	bcf	3,6	;RP1=0, select bank1
   267     0033  1007               	bcf	7,0	;volatile
   268                           
   269                           ;main.c: 24:     RC0 = 0;
   270     0034  1283               	bcf	3,5	;RP0=0, select bank0
   271     0035  1303               	bcf	3,6	;RP1=0, select bank0
   272     0036  1007               	bcf	7,0	;volatile
   273                           
   274                           ;main.c: 28:     TMR1 = 15535;
   275     0037  303C               	movlw	60
   276     0038  008F               	movwf	15	;volatile
   277     0039  30AF               	movlw	175
   278     003A  008E               	movwf	14	;volatile
   279                           
   280                           ;main.c: 31:     TMR1CS = 0;
   281     003B  1090               	bcf	16,1	;volatile
   282                           
   283                           ;main.c: 34:     T1CKPS0 = 0;
   284     003C  1210               	bcf	16,4	;volatile
   285                           
   286                           ;main.c: 35:     T1CKPS1 = 0;
   287     003D  1290               	bcf	16,5	;volatile
   288                           
   289                           ;main.c: 38:     RC0 = 1;
   290     003E  1407               	bsf	7,0	;volatile
   291                           
   292                           ;main.c: 41:     TMR1ON = 1;
   293     003F  1410               	bsf	16,0	;volatile
   294                           
   295                           ;main.c: 44:     TMR1IE = 1;
   296     0040  1683               	bsf	3,5	;RP0=1, select bank1
   297     0041  1303               	bcf	3,6	;RP1=0, select bank1
   298     0042  140C               	bsf	12,0	;volatile
   299                           
   300                           ;main.c: 45:     TMR1IF = 0;
   301     0043  1283               	bcf	3,5	;RP0=0, select bank0
   302     0044  1303               	bcf	3,6	;RP1=0, select bank0
   303     0045  100C               	bcf	12,0	;volatile
   304                           
   305                           ;main.c: 46:     PEIE = 1;
   306     0046  170B               	bsf	11,6	;volatile
   307                           
   308                           ;main.c: 47:     GIE = 1;
   309     0047  178B               	bsf	11,7	;volatile
   310     0048                     l29:	
   311                           ;main.c: 49:     while(1) {
   312                           
   313     0048                     l30:	
   314                           ;main.c: 52:     }
   315                           
   316     0048  2848               	goto	l29
   317     0049  120A  118A  280C   	ljmp	start
   318     004C                     __end_of_main:
   319                           
   320                           	psect	text1
   321     0014                     __ptext1:	
   322 ;; *************** function _ISR *****************
   323 ;; Defined at:
   324 ;;		line 58 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   338 ;;      Params:         0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0
   340 ;;      Temps:          2       0       0       0       0
   341 ;;      Totals:         2       0       0       0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels used: 1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		Interrupt level 1
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351     0014                     _ISR:	
   352                           ;psect for function _ISR
   353                           
   354     0014                     i1l585:
   355                           
   356                           ;main.c: 61:     if(TMR1IF){
   357     0014  1283               	bcf	3,5	;RP0=0, select bank0
   358     0015  1303               	bcf	3,6	;RP1=0, select bank0
   359     0016  1C0C               	btfss	12,0	;volatile
   360     0017  2819               	goto	u1_21
   361     0018  281A               	goto	u1_20
   362     0019                     u1_21:
   363     0019  282A               	goto	i1l39
   364     001A                     u1_20:
   365     001A                     i1l587:
   366                           
   367                           ;main.c: 63:         count++;
   368     001A  3001               	movlw	1
   369     001B  07F2               	addwf	_count,f
   370                           
   371                           ;main.c: 64:         if(count==20){
   372     001C  3014               	movlw	20
   373     001D  0672               	xorwf	_count,w
   374     001E  1D03               	btfss	3,2
   375     001F  2821               	goto	u2_21
   376     0020  2822               	goto	u2_20
   377     0021                     u2_21:
   378     0021  2825               	goto	i1l593
   379     0022                     u2_20:
   380     0022                     i1l589:
   381                           
   382                           ;main.c: 67:             RC0 = ~RC0;
   383     0022  3001               	movlw	1
   384     0023  0687               	xorwf	7,f
   385     0024                     i1l591:
   386                           
   387                           ;main.c: 70:             count = 0;
   388     0024  01F2               	clrf	_count
   389     0025                     i1l593:
   390                           
   391                           ;main.c: 74:         TMR1 =15535;
   392     0025  303C               	movlw	60
   393     0026  008F               	movwf	15	;volatile
   394     0027  30AF               	movlw	175
   395     0028  008E               	movwf	14	;volatile
   396     0029                     i1l595:
   397                           
   398                           ;main.c: 75:         TMR1IF = 0;
   399     0029  100C               	bcf	12,0	;volatile
   400     002A                     i1l39:
   401     002A  0871               	movf	??_ISR+1,w
   402     002B  008A               	movwf	10
   403     002C  0E70               	swapf	??_ISR,w
   404     002D  0083               	movwf	3
   405     002E  0EFE               	swapf	btemp,f
   406     002F  0E7E               	swapf	btemp,w
   407     0030  0009               	retfie
   408     0031                     __end_of_ISR:
   409     0002                     ___latbits      equ	2
   410     007E                     btemp           set	126	;btemp
   411     007E                     wtemp0          set	126
   412                           
   413                           	psect	intentry
   414     0004                     __pintentry:	
   415                           ;incstack = 0
   416                           ; Regs used in _ISR: [wreg+status,2+status,0]
   417                           
   418     0004                     interrupt_function:
   419     007E                     saved_w         set	btemp
   420     0004  00FE               	movwf	btemp
   421     0005  0E03               	swapf	3,w
   422     0006  00F0               	movwf	??_ISR
   423     0007  080A               	movf	10,w
   424     0008  00F1               	movwf	??_ISR+1
   425     0009  120A  118A  2814   	ljmp	_ISR
   426                           
   427                           	psect	config
   428                           
   429                           ;Config register CONFIG @ 0x2007
   430                           ;	Oscillator Selection bits
   431                           ;	FOSC = XT, XT oscillator
   432                           ;	Watchdog Timer Enable bit
   433                           ;	WDTE = OFF, WDT disabled
   434                           ;	Power-up Timer Enable bit
   435                           ;	PWRTE = OFF, PWRT disabled
   436                           ;	Brown-out Reset Enable bit
   437                           ;	BOREN = ON, BOR enabled
   438                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   439                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   440                           ;	Data EEPROM Memory Code Protection bit
   441                           ;	CPD = OFF, Data EEPROM code protection off
   442                           ;	Flash Program Memory Write Enable bits
   443                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   444                           ;	In-Circuit Debugger Mode bit
   445                           ;	DEBUG = 0x1, unprogrammed default
   446                           ;	Flash Program Memory Code Protection bit
   447                           ;	CP = OFF, Code protection off
   448     2007                     	org	8199
   449     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 19 20:50:16 2025

                     l30 0048                       l29 0048                      l583 0031  
                    _GIE 005F                      _RC0 0038                      _ISR 0014  
                   ?_ISR 0070                     _PEIE 005E                     i1l39 002A  
                   _TMR1 000E                     u1_20 001A                     u1_21 0019  
                   u2_20 0022                     u2_21 0021                     _main 0031  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l591 0024                    i1l593 0025  
                  i1l585 0014                    i1l595 0029                    i1l587 001A  
                  i1l589 0022                    _count 0072                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 004C                   ??_main 0072                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
                 _TRISC0 0438                   saved_w 007E  __end_of__initialization 0010  
         __pcstackCOMMON 0070               __pmaintext 0031               __pintentry 0004  
                _T1CKPS0 0084                  _T1CKPS1 0085                  __ptext1 0014  
   end_of_initialization 0010      start_initialization 000F              __end_of_ISR 0031  
            __pbssCOMMON 0072                ___latbits 0002        interrupt_function 0004  
               intlevel1 0000  
