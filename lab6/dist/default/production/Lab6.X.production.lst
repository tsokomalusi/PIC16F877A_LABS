

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Feb 06 21:25:42 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0006                     _PORTB          set	6
   173     0086                     _TRISB          set	134
   174                           
   175                           	psect	cinit
   176     07FC                     start_initialization:	
   177                           ; #config settings
   178                           
   179     07FC                     __initialization:
   180     07FC                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183     07FC                     __end_of__initialization:
   184     07FC  0183               	clrf	3
   185     07FD  120A  118A  2F86   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188     0070                     __pcstackCOMMON:
   189     0070                     ?_main:
   190     0070                     ??_main:	
   191                           ; 1 bytes @ 0x0
   192                           
   193                           
   194                           ; 1 bytes @ 0x0
   195     0070                     	ds	2
   196     0072                     main@j:
   197                           
   198                           ; 2 bytes @ 0x2
   199     0072                     	ds	2
   200     0074                     main@j_37:
   201                           
   202                           ; 2 bytes @ 0x4
   203     0074                     	ds	2
   204     0076                     main@i:
   205                           
   206                           ; 1 bytes @ 0x6
   207     0076                     	ds	1
   208                           
   209                           	psect	maintext
   210     0786                     __pmaintext:	
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 17 in file "lab6.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;  j               2    4[COMMON] int 
   221 ;;  j               2    2[COMMON] int 
   222 ;;  i               1    6[COMMON] unsigned char 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, btemp+1
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         5       0       0       0       0
   234 ;;      Temps:          2       0       0       0       0
   235 ;;      Totals:         7       0       0       0       0
   236 ;;Total ram usage:        7 bytes
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244     0786                     _main:	
   245                           ;psect for function _main
   246                           
   247     0786                     l564:	
   248                           ;incstack = 0
   249                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   250                           
   251                           
   252                           ;lab6.c: 19:     TRISB = 0X00;
   253     0786  1683               	bsf	3,5	;RP0=1, select bank1
   254     0787  1303               	bcf	3,6	;RP1=0, select bank1
   255     0788  0186               	clrf	6	;volatile
   256                           
   257                           ;lab6.c: 20:     PORTB = 0X00;
   258     0789  1283               	bcf	3,5	;RP0=0, select bank0
   259     078A  1303               	bcf	3,6	;RP1=0, select bank0
   260     078B  0186               	clrf	6	;volatile
   261                           
   262                           ;lab6.c: 22:     unsigned char i = 0;
   263     078C  01F6               	clrf	main@i
   264     078D                     l11:	
   265                           ;lab6.c: 25:     while(1) {
   266                           
   267                           
   268                           ;lab6.c: 29:         for(int j=0; j<48; j++) {
   269     078D  01F2               	clrf	main@j
   270     078E  01F3               	clrf	main@j+1
   271     078F                     l570:
   272                           
   273                           ;lab6.c: 31:             PORTB = (1<<i);
   274     078F  3001               	movlw	1
   275     0790  00F0               	movwf	??_main
   276     0791  0A76               	incf	main@i,w
   277     0792  2F95               	goto	u14
   278     0793                     u15:
   279     0793  1003               	clrc
   280     0794  0DF0               	rlf	??_main,f
   281     0795                     u14:
   282     0795  3EFF               	addlw	-1
   283     0796  1D03               	skipz
   284     0797  2F93               	goto	u15
   285     0798  0870               	movf	??_main,w
   286     0799  1283               	bcf	3,5	;RP0=0, select bank0
   287     079A  1303               	bcf	3,6	;RP1=0, select bank0
   288     079B  0086               	movwf	6	;volatile
   289                           
   290                           ;lab6.c: 32:             i++;
   291     079C  3001               	movlw	1
   292     079D  07F6               	addwf	main@i,f
   293     079E                     l572:
   294                           
   295                           ;lab6.c: 33:             _delay((unsigned long)((25)*(4000000/4000.0)));
   296     079E  3021               	movlw	33
   297     079F  00F1               	movwf	??_main+1
   298     07A0  3076               	movlw	118
   299     07A1  00F0               	movwf	??_main
   300     07A2                     u77:
   301     07A2  0BF0               	decfsz	??_main,f
   302     07A3  2FA2               	goto	u77
   303     07A4  0BF1               	decfsz	??_main+1,f
   304     07A5  2FA2               	goto	u77
   305     07A6  0000               	nop
   306     07A7                     l574:
   307                           
   308                           ;lab6.c: 34:             if(i==4)
   309     07A7  3004               	movlw	4
   310     07A8  0676               	xorwf	main@i,w
   311     07A9  1D03               	btfss	3,2
   312     07AA  2FAC               	goto	u21
   313     07AB  2FAD               	goto	u20
   314     07AC                     u21:
   315     07AC  2FAE               	goto	l578
   316     07AD                     u20:
   317     07AD                     l576:
   318                           
   319                           ;lab6.c: 35:                 i=0;
   320     07AD  01F6               	clrf	main@i
   321     07AE                     l578:
   322                           
   323                           ;lab6.c: 36:         }
   324     07AE  3001               	movlw	1
   325     07AF  07F2               	addwf	main@j,f
   326     07B0  1803               	skipnc
   327     07B1  0AF3               	incf	main@j+1,f
   328     07B2  3000               	movlw	0
   329     07B3  07F3               	addwf	main@j+1,f
   330     07B4                     l580:
   331     07B4  0873               	movf	main@j+1,w
   332     07B5  3A80               	xorlw	128
   333     07B6  00FF               	movwf	btemp+1
   334     07B7  3080               	movlw	128
   335     07B8  027F               	subwf	btemp+1,w
   336     07B9  1D03               	skipz
   337     07BA  2FBD               	goto	u35
   338     07BB  3030               	movlw	48
   339     07BC  0272               	subwf	main@j,w
   340     07BD                     u35:
   341     07BD  1C03               	skipc
   342     07BE  2FC0               	goto	u31
   343     07BF  2FC1               	goto	u30
   344     07C0                     u31:
   345     07C0  2F8F               	goto	l570
   346     07C1                     u30:
   347     07C1                     l582:
   348                           
   349                           ;lab6.c: 40:         for(int j=0; j<48; j++) {
   350     07C1  01F4               	clrf	main@j_37
   351     07C2  01F5               	clrf	main@j_37+1
   352     07C3                     l588:
   353                           
   354                           ;lab6.c: 42:             PORTB = (8>>i);
   355     07C3  0A76               	incf	main@i,w
   356     07C4  00FF               	movwf	btemp+1
   357     07C5  3008               	movlw	8
   358     07C6  00F0               	movwf	??_main
   359     07C7  3000               	movlw	0
   360     07C8  00F1               	movwf	??_main+1
   361     07C9  2FCD               	goto	u44
   362     07CA                     u45:
   363     07CA  0D71               	rlf	??_main+1,w
   364     07CB  0CF1               	rrf	??_main+1,f
   365     07CC  0CF0               	rrf	??_main,f
   366     07CD                     u44:
   367     07CD  0BFF               	decfsz	btemp+1,f
   368     07CE  2FCA               	goto	u45
   369     07CF  0870               	movf	??_main,w
   370     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   371     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   372     07D2  0086               	movwf	6	;volatile
   373     07D3                     l590:
   374                           
   375                           ;lab6.c: 43:             i++;
   376     07D3  3001               	movlw	1
   377     07D4  07F6               	addwf	main@i,f
   378     07D5                     l592:
   379                           
   380                           ;lab6.c: 44:             _delay((unsigned long)((25)*(4000000/4000.0)));
   381     07D5  3021               	movlw	33
   382     07D6  00F1               	movwf	??_main+1
   383     07D7  3076               	movlw	118
   384     07D8  00F0               	movwf	??_main
   385     07D9                     u87:
   386     07D9  0BF0               	decfsz	??_main,f
   387     07DA  2FD9               	goto	u87
   388     07DB  0BF1               	decfsz	??_main+1,f
   389     07DC  2FD9               	goto	u87
   390     07DD  0000               	nop
   391     07DE                     l594:
   392                           
   393                           ;lab6.c: 45:             if(i==4)
   394     07DE  3004               	movlw	4
   395     07DF  0676               	xorwf	main@i,w
   396     07E0  1D03               	btfss	3,2
   397     07E1  2FE3               	goto	u51
   398     07E2  2FE4               	goto	u50
   399     07E3                     u51:
   400     07E3  2FE5               	goto	l598
   401     07E4                     u50:
   402     07E4                     l596:
   403                           
   404                           ;lab6.c: 46:                 i=0;
   405     07E4  01F6               	clrf	main@i
   406     07E5                     l598:
   407                           
   408                           ;lab6.c: 48:         }
   409     07E5  3001               	movlw	1
   410     07E6  07F4               	addwf	main@j_37,f
   411     07E7  1803               	skipnc
   412     07E8  0AF5               	incf	main@j_37+1,f
   413     07E9  3000               	movlw	0
   414     07EA  07F5               	addwf	main@j_37+1,f
   415     07EB                     l600:
   416     07EB  0875               	movf	main@j_37+1,w
   417     07EC  3A80               	xorlw	128
   418     07ED  00FF               	movwf	btemp+1
   419     07EE  3080               	movlw	128
   420     07EF  027F               	subwf	btemp+1,w
   421     07F0  1D03               	skipz
   422     07F1  2FF4               	goto	u65
   423     07F2  3030               	movlw	48
   424     07F3  0274               	subwf	main@j_37,w
   425     07F4                     u65:
   426     07F4  1C03               	skipc
   427     07F5  2FF7               	goto	u61
   428     07F6  2FF8               	goto	u60
   429     07F7                     u61:
   430     07F7  2FC3               	goto	l588
   431     07F8                     u60:
   432     07F8  2F8D               	goto	l11
   433     07F9  120A  118A  2800   	ljmp	start
   434     07FC                     __end_of_main:
   435     0002                     ___latbits      equ	2
   436     007E                     btemp           set	126	;btemp
   437     007E                     wtemp0          set	126
   438                           
   439                           	psect	config
   440                           
   441                           ;Config register CONFIG @ 0x2007
   442                           ;	Oscillator Selection bits
   443                           ;	FOSC = XT, XT oscillator
   444                           ;	Watchdog Timer Enable bit
   445                           ;	WDTE = OFF, WDT disabled
   446                           ;	Power-up Timer Enable bit
   447                           ;	PWRTE = OFF, PWRT disabled
   448                           ;	Brown-out Reset Enable bit
   449                           ;	BOREN = ON, BOR enabled
   450                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   451                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   452                           ;	Data EEPROM Memory Code Protection bit
   453                           ;	CPD = OFF, Data EEPROM code protection off
   454                           ;	Flash Program Memory Write Enable bits
   455                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   456                           ;	In-Circuit Debugger Mode bit
   457                           ;	DEBUG = 0x1, unprogrammed default
   458                           ;	Flash Program Memory Code Protection bit
   459                           ;	CP = OFF, Code protection off
   460     2007                     	org	8199
   461     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     120
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Feb 06 21:25:42 2025

                     l11 078D                       u20 07AD                       u21 07AC  
                     u30 07C1                       u14 0795                       u31 07C0  
                     u15 0793                       u50 07E4                       u51 07E3  
                     u35 07BD                       u60 07F8                       u44 07CD  
                     u61 07F7                       u45 07CA                       u65 07F4  
                     u77 07A2                       u87 07D9                      l600 07EB  
                    l570 078F                      l580 07B4                      l572 079E  
                    l564 0786                      l590 07D3                      l582 07C1  
                    l574 07A7                      l592 07D5                      l576 07AD  
                    l594 07DE                      l578 07AE                      l596 07E4  
                    l588 07C3                      l598 07E5                     _main 0786  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    main@i 0076  
                  main@j 0072                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0786  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
               main@j_37 0074  
