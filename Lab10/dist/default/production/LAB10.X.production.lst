

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Feb 20 18:24:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,space=0,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009C                     CMCON           equ	156	;# 
   105     009D                     CVRCON          equ	157	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009C                     CMCON           equ	156	;# 
   165     009D                     CVRCON          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174     0039                     _RC1            set	57
   175     0059                     _INTF           set	89
   176     003A                     _RC2            set	58
   177     005F                     _GIE            set	95
   178     005C                     _INTE           set	92
   179     040E                     _INTEDG         set	1038
   180     043A                     _TRISC2         set	1082
   181     0439                     _TRISC1         set	1081
   182                           
   183                           	psect	cinit
   184     000F                     start_initialization:	
   185                           ; #config settings
   186                           
   187     000F                     __initialization:
   188     000F                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191     000F                     __end_of__initialization:
   192     000F  0183               	clrf	3
   193     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196     0070                     __pcstackCOMMON:
   197     0070                     ?_main:
   198     0070                     ?_ISR:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_ISR:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206     0070                     	ds	2
   207     0072                     ??_main:
   208                           
   209                           ; 1 bytes @ 0x2
   210     0072                     	ds	3
   211                           
   212                           	psect	maintext
   213     0013                     __pmaintext:	
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 16 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0
   235 ;;      Temps:          3       0       0       0       0
   236 ;;      Totals:         3       0       0       0       0
   237 ;;Total ram usage:        3 bytes
   238 ;; Hardware stack levels required when called: 1
   239 ;; This function calls:
   240 ;;		Nothing
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246     0013                     _main:	
   247                           ;psect for function _main
   248                           
   249     0013                     l576:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg]
   252                           
   253                           
   254                           ;main.c: 19:     TRISC1 = 0;
   255     0013  1683               	bsf	3,5	;RP0=1, select bank1
   256     0014  1303               	bcf	3,6	;RP1=0, select bank1
   257     0015  1087               	bcf	7,1	;volatile
   258                           
   259                           ;main.c: 20:     TRISC2 = 0;
   260     0016  1107               	bcf	7,2	;volatile
   261                           
   262                           ;main.c: 23:     INTEDG = 1;
   263     0017  1701               	bsf	1,6	;volatile
   264                           
   265                           ;main.c: 24:     INTE = 1;
   266     0018  160B               	bsf	11,4	;volatile
   267                           
   268                           ;main.c: 25:     GIE = 1;
   269     0019  178B               	bsf	11,7	;volatile
   270     001A                     l23:	
   271                           ;main.c: 29:     while(1) {
   272                           
   273                           
   274                           ;main.c: 32:         RC2 = 1;
   275     001A  1283               	bcf	3,5	;RP0=0, select bank0
   276     001B  1303               	bcf	3,6	;RP1=0, select bank0
   277     001C  1507               	bsf	7,2	;volatile
   278     001D                     l578:
   279                           
   280                           ;main.c: 33:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   281     001D  3006               	movlw	6
   282     001E  00F4               	movwf	??_main+2
   283     001F  3013               	movlw	19
   284     0020  00F3               	movwf	??_main+1
   285     0021  30AD               	movlw	173
   286     0022  00F2               	movwf	??_main
   287     0023                     u27:
   288     0023  0BF2               	decfsz	??_main,f
   289     0024  2823               	goto	u27
   290     0025  0BF3               	decfsz	??_main+1,f
   291     0026  2823               	goto	u27
   292     0027  0BF4               	decfsz	??_main+2,f
   293     0028  2823               	goto	u27
   294     0029  282A               	nop2
   295     002A                     l580:
   296                           
   297                           ;main.c: 34:         RC2 = 0;
   298     002A  1283               	bcf	3,5	;RP0=0, select bank0
   299     002B  1303               	bcf	3,6	;RP1=0, select bank0
   300     002C  1107               	bcf	7,2	;volatile
   301                           
   302                           ;main.c: 35:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   303     002D  3006               	movlw	6
   304     002E  00F4               	movwf	??_main+2
   305     002F  3013               	movlw	19
   306     0030  00F3               	movwf	??_main+1
   307     0031  30AD               	movlw	173
   308     0032  00F2               	movwf	??_main
   309     0033                     u37:
   310     0033  0BF2               	decfsz	??_main,f
   311     0034  2833               	goto	u37
   312     0035  0BF3               	decfsz	??_main+1,f
   313     0036  2833               	goto	u37
   314     0037  0BF4               	decfsz	??_main+2,f
   315     0038  2833               	goto	u37
   316     0039  283A               	nop2
   317     003A  281A               	goto	l23
   318     003B  120A  118A  280C   	ljmp	start
   319     003E                     __end_of_main:
   320                           
   321                           	psect	text1
   322     003E                     __ptext1:	
   323 ;; *************** function _ISR *****************
   324 ;; Defined at:
   325 ;;		line 41 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   339 ;;      Params:         0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0
   341 ;;      Temps:          2       0       0       0       0
   342 ;;      Totals:         2       0       0       0       0
   343 ;;Total ram usage:        2 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		Interrupt level 1
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352     003E                     _ISR:	
   353                           ;psect for function _ISR
   354                           
   355     003E                     i1l582:
   356                           
   357                           ;main.c: 44:     if(INTF == 1){
   358     003E  1C8B               	btfss	11,1	;volatile
   359     003F  2841               	goto	u1_21
   360     0040  2842               	goto	u1_20
   361     0041                     u1_21:
   362     0041  2847               	goto	i1l32
   363     0042                     u1_20:
   364     0042                     i1l584:
   365                           
   366                           ;main.c: 47:         RC1 = ~RC1;
   367     0042  3002               	movlw	2
   368     0043  1283               	bcf	3,5	;RP0=0, select bank0
   369     0044  1303               	bcf	3,6	;RP1=0, select bank0
   370     0045  0687               	xorwf	7,f
   371     0046                     i1l586:
   372                           
   373                           ;main.c: 48:         INTF = 0;
   374     0046  108B               	bcf	11,1	;volatile
   375     0047                     i1l32:
   376     0047  0871               	movf	??_ISR+1,w
   377     0048  008A               	movwf	10
   378     0049  0E70               	swapf	??_ISR,w
   379     004A  0083               	movwf	3
   380     004B  0EFE               	swapf	btemp,f
   381     004C  0E7E               	swapf	btemp,w
   382     004D  0009               	retfie
   383     004E                     __end_of_ISR:
   384     0002                     ___latbits      equ	2
   385     007E                     btemp           set	126	;btemp
   386     007E                     wtemp0          set	126
   387                           
   388                           	psect	intentry
   389     0004                     __pintentry:	
   390                           ;incstack = 0
   391                           ; Regs used in _ISR: [wreg]
   392                           
   393     0004                     interrupt_function:
   394     007E                     saved_w         set	btemp
   395     0004  00FE               	movwf	btemp
   396     0005  0E03               	swapf	3,w
   397     0006  00F0               	movwf	??_ISR
   398     0007  080A               	movf	10,w
   399     0008  00F1               	movwf	??_ISR+1
   400     0009  120A  118A  283E   	ljmp	_ISR
   401                           
   402                           	psect	config
   403                           
   404                           ;Config register CONFIG @ 0x2007
   405                           ;	Oscillator Selection bits
   406                           ;	FOSC = XT, XT oscillator
   407                           ;	Watchdog Timer Enable bit
   408                           ;	WDTE = OFF, WDT disabled
   409                           ;	Power-up Timer Enable bit
   410                           ;	PWRTE = OFF, PWRT disabled
   411                           ;	Brown-out Reset Enable bit
   412                           ;	BOREN = ON, BOR enabled
   413                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   414                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   415                           ;	Data EEPROM Memory Code Protection bit
   416                           ;	CPD = OFF, Data EEPROM code protection off
   417                           ;	Flash Program Memory Write Enable bits
   418                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   419                           ;	In-Circuit Debugger Mode bit
   420                           ;	DEBUG = 0x1, unprogrammed default
   421                           ;	Flash Program Memory Code Protection bit
   422                           ;	CP = OFF, Code protection off
   423     2007                     	org	8199
   424     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      5       5     35.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Feb 20 18:24:38 2025

                     l23 001A                       u27 0023                       u37 0033  
                    l580 002A                      l576 0013                      l578 001D  
                    _GIE 005F                      _RC1 0039                      _RC2 003A  
                    _ISR 003E                     ?_ISR 0070                     _INTE 005C  
                   _INTF 0059                     i1l32 0047                     u1_20 0042  
                   u1_21 0041                     _main 0013                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  i1l582 003E                    i1l584 0042                    i1l586 0046  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 003E                   ??_main 0072  
                 _INTEDG 040E                   _TRISC1 0439                   _TRISC2 043A  
                 saved_w 007E  __end_of__initialization 000F           __pcstackCOMMON 0070  
             __pmaintext 0013               __pintentry 0004                  __ptext1 003E  
   end_of_initialization 000F      start_initialization 000F              __end_of_ISR 004E  
              ___latbits 0002        interrupt_function 0004                 intlevel1 0000  
