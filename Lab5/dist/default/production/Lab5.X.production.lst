

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Feb 04 22:08:59 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0006                     _PORTB          set	6
   173     0039                     _RC1            set	57
   174     0038                     _RC0            set	56
   175     0086                     _TRISB          set	134
   176     0439                     _TRISC1         set	1081
   177     0438                     _TRISC0         set	1080
   178                           
   179                           	psect	cinit
   180     07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183     07FC                     __initialization:
   184     07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FC                     __end_of__initialization:
   188     07FC  0183               	clrf	3
   189     07FD  120A  118A  2FA0   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_main:
   194     0070                     ??_main:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 1 bytes @ 0x0
   199     0070                     	ds	2
   200     0072                     main@i:
   201                           
   202                           ; 1 bytes @ 0x2
   203     0072                     	ds	1
   204                           
   205                           	psect	maintext
   206     07A0                     __pmaintext:	
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 17 in file "main.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;  i               1    2[COMMON] unsigned char 
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, status,2, status,0, btemp+1
   221 ;; Tracked objects:
   222 ;;		On entry : B00/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   226 ;;      Params:         0       0       0       0       0
   227 ;;      Locals:         1       0       0       0       0
   228 ;;      Temps:          2       0       0       0       0
   229 ;;      Totals:         3       0       0       0       0
   230 ;;Total ram usage:        3 bytes
   231 ;; This function calls:
   232 ;;		Nothing
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238     07A0                     _main:	
   239                           ;psect for function _main
   240                           
   241     07A0                     l574:	
   242                           ;incstack = 0
   243                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   244                           
   245                           
   246                           ;main.c: 20:     unsigned char i=0;
   247     07A0  01F2               	clrf	main@i
   248                           
   249                           ;main.c: 23:     TRISB = 0X00;
   250     07A1  1683               	bsf	3,5	;RP0=1, select bank1
   251     07A2  1303               	bcf	3,6	;RP1=0, select bank1
   252     07A3  0186               	clrf	6	;volatile
   253                           
   254                           ;main.c: 26:     PORTB = 0X00;
   255     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   256     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   257     07A6  0186               	clrf	6	;volatile
   258     07A7                     l576:
   259                           
   260                           ;main.c: 29:     TRISC0 = 1;
   261     07A7  1683               	bsf	3,5	;RP0=1, select bank1
   262     07A8  1303               	bcf	3,6	;RP1=0, select bank1
   263     07A9  1407               	bsf	7,0	;volatile
   264     07AA                     l578:
   265                           
   266                           ;main.c: 30:     TRISC1 = 1;
   267     07AA  1487               	bsf	7,1	;volatile
   268     07AB  2FC9               	goto	l588
   269     07AC                     l580:
   270                           
   271                           ;main.c: 38:             PORTB = (1<<i);
   272     07AC  3001               	movlw	1
   273     07AD  00F0               	movwf	??_main
   274     07AE  0A72               	incf	main@i,w
   275     07AF  2FB2               	goto	u14
   276     07B0                     u15:
   277     07B0  1003               	clrc
   278     07B1  0DF0               	rlf	??_main,f
   279     07B2                     u14:
   280     07B2  3EFF               	addlw	-1
   281     07B3  1D03               	skipz
   282     07B4  2FB0               	goto	u15
   283     07B5  0870               	movf	??_main,w
   284     07B6  0086               	movwf	6	;volatile
   285                           
   286                           ;main.c: 39:             i++;
   287     07B7  3001               	movlw	1
   288     07B8  07F2               	addwf	main@i,f
   289     07B9                     l582:
   290                           
   291                           ;main.c: 40:             _delay((unsigned long)((100)*(4000000/4000.0)));
   292     07B9  3082               	movlw	130
   293     07BA  00F1               	movwf	??_main+1
   294     07BB  30DD               	movlw	221
   295     07BC  00F0               	movwf	??_main
   296     07BD                     u77:
   297     07BD  0BF0               	decfsz	??_main,f
   298     07BE  2FBD               	goto	u77
   299     07BF  0BF1               	decfsz	??_main+1,f
   300     07C0  2FBD               	goto	u77
   301     07C1  2FC2               	nop2
   302     07C2                     l584:
   303                           
   304                           ;main.c: 41:             if (i==4)
   305     07C2  3004               	movlw	4
   306     07C3  0672               	xorwf	main@i,w
   307     07C4  1D03               	btfss	3,2
   308     07C5  2FC7               	goto	u21
   309     07C6  2FC8               	goto	u20
   310     07C7                     u21:
   311     07C7  2FC9               	goto	l588
   312     07C8                     u20:
   313     07C8                     l586:
   314                           
   315                           ;main.c: 42:                 i=0;
   316     07C8  01F2               	clrf	main@i
   317     07C9                     l588:
   318                           
   319                           ;main.c: 36:         while(RC0){
   320     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   321     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   322     07CB  1807               	btfsc	7,0	;volatile
   323     07CC  2FCE               	goto	u31
   324     07CD  2FCF               	goto	u30
   325     07CE                     u31:
   326     07CE  2FAC               	goto	l580
   327     07CF                     u30:
   328     07CF  2FF2               	goto	l600
   329     07D0                     l590:
   330                           
   331                           ;main.c: 49:             PORTB = (8>>i);
   332     07D0  0A72               	incf	main@i,w
   333     07D1  00FF               	movwf	btemp+1
   334     07D2  3008               	movlw	8
   335     07D3  00F0               	movwf	??_main
   336     07D4  3000               	movlw	0
   337     07D5  00F1               	movwf	??_main+1
   338     07D6  2FDA               	goto	u44
   339     07D7                     u45:
   340     07D7  0D71               	rlf	??_main+1,w
   341     07D8  0CF1               	rrf	??_main+1,f
   342     07D9  0CF0               	rrf	??_main,f
   343     07DA                     u44:
   344     07DA  0BFF               	decfsz	btemp+1,f
   345     07DB  2FD7               	goto	u45
   346     07DC  0870               	movf	??_main,w
   347     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   348     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   349     07DF  0086               	movwf	6	;volatile
   350     07E0                     l592:
   351                           
   352                           ;main.c: 50:             i++;
   353     07E0  3001               	movlw	1
   354     07E1  07F2               	addwf	main@i,f
   355     07E2                     l594:
   356                           
   357                           ;main.c: 51:             _delay((unsigned long)((100)*(4000000/4000.0)));
   358     07E2  3082               	movlw	130
   359     07E3  00F1               	movwf	??_main+1
   360     07E4  30DD               	movlw	221
   361     07E5  00F0               	movwf	??_main
   362     07E6                     u87:
   363     07E6  0BF0               	decfsz	??_main,f
   364     07E7  2FE6               	goto	u87
   365     07E8  0BF1               	decfsz	??_main+1,f
   366     07E9  2FE6               	goto	u87
   367     07EA  2FEB               	nop2
   368     07EB                     l596:
   369                           
   370                           ;main.c: 52:             if(i==4)
   371     07EB  3004               	movlw	4
   372     07EC  0672               	xorwf	main@i,w
   373     07ED  1D03               	btfss	3,2
   374     07EE  2FF0               	goto	u51
   375     07EF  2FF1               	goto	u50
   376     07F0                     u51:
   377     07F0  2FF2               	goto	l600
   378     07F1                     u50:
   379     07F1                     l598:
   380                           
   381                           ;main.c: 53:                 i=0;
   382     07F1  01F2               	clrf	main@i
   383     07F2                     l600:
   384                           
   385                           ;main.c: 47:         while(RC1) {
   386     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   387     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   388     07F4  1887               	btfsc	7,1	;volatile
   389     07F5  2FF7               	goto	u61
   390     07F6  2FF8               	goto	u60
   391     07F7                     u61:
   392     07F7  2FD0               	goto	l590
   393     07F8                     u60:
   394     07F8  2FC9               	goto	l588
   395     07F9  120A  118A  2800   	ljmp	start
   396     07FC                     __end_of_main:
   397     0002                     ___latbits      equ	2
   398     007E                     btemp           set	126	;btemp
   399     007E                     wtemp0          set	126
   400                           
   401                           	psect	config
   402                           
   403                           ;Config register CONFIG @ 0x2007
   404                           ;	Oscillator Selection bits
   405                           ;	FOSC = XT, XT oscillator
   406                           ;	Watchdog Timer Enable bit
   407                           ;	WDTE = OFF, WDT disabled
   408                           ;	Power-up Timer Enable bit
   409                           ;	PWRTE = OFF, PWRT disabled
   410                           ;	Brown-out Reset Enable bit
   411                           ;	BOREN = ON, BOR enabled
   412                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   413                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   414                           ;	Data EEPROM Memory Code Protection bit
   415                           ;	CPD = OFF, Data EEPROM code protection off
   416                           ;	Flash Program Memory Write Enable bits
   417                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   418                           ;	In-Circuit Debugger Mode bit
   419                           ;	DEBUG = 0x1, unprogrammed default
   420                           ;	Flash Program Memory Code Protection bit
   421                           ;	CP = OFF, Code protection off
   422     2007                     	org	8199
   423     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      3       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Feb 04 22:08:59 2025

                     u20 07C8                       u21 07C7                       u30 07CF  
                     u14 07B2                       u31 07CE                       u15 07B0  
                     u50 07F1                       u51 07F0                       u60 07F8  
                     u44 07DA                       u61 07F7                       u45 07D7  
                     u77 07BD                       u87 07E6                      l600 07F2  
                    l580 07AC                      l590 07D0                      l582 07B9  
                    l574 07A0                      l592 07E0                      l584 07C2  
                    l576 07A7                      l594 07E2                      l586 07C8  
                    l578 07AA                      l596 07EB                      l588 07C9  
                    l598 07F1                      _RC0 0038                      _RC1 0039  
                   _main 07A0                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  main@i 0072                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
                 _TRISC0 0438                   _TRISC1 0439  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07A0     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002  
