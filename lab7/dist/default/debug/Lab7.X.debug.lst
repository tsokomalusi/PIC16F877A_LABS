

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 12 19:49:47 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,space=0,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009C                     CMCON           equ	156	;# 
   105     009D                     CVRCON          equ	157	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009C                     CMCON           equ	156	;# 
   165     009D                     CVRCON          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174     0039                     _RC1            set	57
   175     0030                     _RB0            set	48
   176     0038                     _RC0            set	56
   177     0439                     _TRISC1         set	1081
   178     0438                     _TRISC0         set	1080
   179     0431                     _TRISB1         set	1073
   180     0430                     _TRISB0         set	1072
   181                           
   182                           	psect	cinit
   183     000F                     start_initialization:	
   184                           ; #config settings
   185                           
   186     000F                     __initialization:
   187     000F                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190     000F                     __end_of__initialization:
   191     000F  0183               	clrf	3
   192     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	cstackCOMMON
   195     0070                     __pcstackCOMMON:
   196     0070                     ?_main:
   197     0070                     ?_ISR:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ??_ISR:	
   201                           ; 1 bytes @ 0x0
   202                           
   203                           
   204                           ; 1 bytes @ 0x0
   205     0070                     	ds	5
   206     0075                     ??_main:
   207                           
   208                           ; 1 bytes @ 0x5
   209     0075                     	ds	3
   210                           
   211                           	psect	maintext
   212     0013                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 21 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0
   234 ;;      Temps:          3       0       0       0       0
   235 ;;      Totals:         3       0       0       0       0
   236 ;;Total ram usage:        3 bytes
   237 ;; Hardware stack levels required when called: 1
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245     0013                     _main:	
   246                           ;psect for function _main
   247                           
   248     0013                     l574:	
   249                           ;incstack = 0
   250                           ; Regs used in _main: [wreg]
   251                           
   252                           
   253                           ;main.c: 26:     TRISB0 = 1;
   254     0013  1683               	bsf	3,5	;RP0=1, select bank1
   255     0014  1303               	bcf	3,6	;RP1=0, select bank1
   256     0015  1406               	bsf	6,0	;volatile
   257                           
   258                           ;main.c: 27:     TRISB1 = 1;
   259     0016  1486               	bsf	6,1	;volatile
   260                           
   261                           ;main.c: 30:     TRISC0 = 0;
   262     0017  1007               	bcf	7,0	;volatile
   263                           
   264                           ;main.c: 31:     TRISC1 = 0;
   265     0018  1087               	bcf	7,1	;volatile
   266     0019                     l21:	
   267                           ;main.c: 51:     while(1) {
   268                           
   269                           
   270                           ;main.c: 53:          RC0 = 1;
   271     0019  1283               	bcf	3,5	;RP0=0, select bank0
   272     001A  1303               	bcf	3,6	;RP1=0, select bank0
   273     001B  1407               	bsf	7,0	;volatile
   274     001C                     l576:
   275                           
   276                           ;main.c: 54:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   277     001C  3006               	movlw	6
   278     001D  00F7               	movwf	??_main+2
   279     001E  3013               	movlw	19
   280     001F  00F6               	movwf	??_main+1
   281     0020  30AD               	movlw	173
   282     0021  00F5               	movwf	??_main
   283     0022                     u27:
   284     0022  0BF5               	decfsz	??_main,f
   285     0023  2822               	goto	u27
   286     0024  0BF6               	decfsz	??_main+1,f
   287     0025  2822               	goto	u27
   288     0026  0BF7               	decfsz	??_main+2,f
   289     0027  2822               	goto	u27
   290     0028  2829               	nop2
   291     0029                     l578:
   292                           
   293                           ;main.c: 55:         RC0 = 0;
   294     0029  1283               	bcf	3,5	;RP0=0, select bank0
   295     002A  1303               	bcf	3,6	;RP1=0, select bank0
   296     002B  1007               	bcf	7,0	;volatile
   297                           
   298                           ;main.c: 56:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   299     002C  3006               	movlw	6
   300     002D  00F7               	movwf	??_main+2
   301     002E  3013               	movlw	19
   302     002F  00F6               	movwf	??_main+1
   303     0030  30AD               	movlw	173
   304     0031  00F5               	movwf	??_main
   305     0032                     u37:
   306     0032  0BF5               	decfsz	??_main,f
   307     0033  2832               	goto	u37
   308     0034  0BF6               	decfsz	??_main+1,f
   309     0035  2832               	goto	u37
   310     0036  0BF7               	decfsz	??_main+2,f
   311     0037  2832               	goto	u37
   312     0038  2839               	nop2
   313     0039  2819               	goto	l21
   314     003A  120A  118A  280C   	ljmp	start
   315     003D                     __end_of_main:
   316                           
   317                           	psect	text1
   318     003D                     __ptext1:	
   319 ;; *************** function _ISR *****************
   320 ;; Defined at:
   321 ;;		line 64 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          5       0       0       0       0
   338 ;;      Totals:         5       0       0       0       0
   339 ;;Total ram usage:        5 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		Interrupt level 1
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348     003D                     _ISR:	
   349                           ;psect for function _ISR
   350                           
   351     003D                     i1l580:
   352                           
   353                           ;main.c: 66:     if(RB0 == 1) {
   354     003D  1283               	bcf	3,5	;RP0=0, select bank0
   355     003E  1303               	bcf	3,6	;RP1=0, select bank0
   356     003F  1C06               	btfss	6,0	;volatile
   357     0040  2842               	goto	u1_21
   358     0041  2843               	goto	u1_20
   359     0042                     u1_21:
   360     0042  2854               	goto	i1l30
   361     0043                     u1_20:
   362     0043                     i1l582:
   363                           
   364                           ;main.c: 68:         RC1 = 1;
   365     0043  1487               	bsf	7,1	;volatile
   366     0044                     i1l584:
   367                           
   368                           ;main.c: 69:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   369     0044  3006               	movlw	6
   370     0045  00F2               	movwf	??_ISR+2
   371     0046  3013               	movlw	19
   372     0047  00F1               	movwf	??_ISR+1
   373     0048  30AD               	movlw	173
   374     0049  00F0               	movwf	??_ISR
   375     004A                     u4_27:
   376     004A  0BF0               	decfsz	??_ISR,f
   377     004B  284A               	goto	u4_27
   378     004C  0BF1               	decfsz	??_ISR+1,f
   379     004D  284A               	goto	u4_27
   380     004E  0BF2               	decfsz	??_ISR+2,f
   381     004F  284A               	goto	u4_27
   382     0050  2851               	nop2
   383     0051                     i1l586:
   384                           
   385                           ;main.c: 70:         RC1 = 0;
   386     0051  1283               	bcf	3,5	;RP0=0, select bank0
   387     0052  1303               	bcf	3,6	;RP1=0, select bank0
   388     0053  1087               	bcf	7,1	;volatile
   389     0054                     i1l30:
   390     0054  0874               	movf	??_ISR+4,w
   391     0055  008A               	movwf	10
   392     0056  0E73               	swapf	??_ISR+3,w
   393     0057  0083               	movwf	3
   394     0058  0EFE               	swapf	btemp,f
   395     0059  0E7E               	swapf	btemp,w
   396     005A  0009               	retfie
   397     005B                     __end_of_ISR:
   398     0002                     ___latbits      equ	2
   399     007E                     btemp           set	126	;btemp
   400     007E                     wtemp0          set	126
   401                           
   402                           	psect	intentry
   403     0004                     __pintentry:	
   404                           ;incstack = 0
   405                           ; Regs used in _ISR: [wreg]
   406                           
   407     0004                     interrupt_function:
   408     007E                     saved_w         set	btemp
   409     0004  00FE               	movwf	btemp
   410     0005  0E03               	swapf	3,w
   411     0006  00F3               	movwf	??_ISR+3
   412     0007  080A               	movf	10,w
   413     0008  00F4               	movwf	??_ISR+4
   414     0009  120A  118A  283D   	ljmp	_ISR
   415                           
   416                           	psect	config
   417                           
   418                           ;Config register CONFIG @ 0x2007
   419                           ;	Oscillator Selection bits
   420                           ;	FOSC = XT, XT oscillator
   421                           ;	Watchdog Timer Enable bit
   422                           ;	WDTE = OFF, WDT disabled
   423                           ;	Power-up Timer Enable bit
   424                           ;	PWRTE = OFF, PWRT disabled
   425                           ;	Brown-out Reset Enable bit
   426                           ;	BOREN = ON, BOR enabled
   427                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   428                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   429                           ;	Data EEPROM Memory Code Protection bit
   430                           ;	CPD = OFF, Data EEPROM code protection off
   431                           ;	Flash Program Memory Write Enable bits
   432                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   433                           ;	In-Circuit Debugger Mode bit
   434                           ;	DEBUG = 0x1, unprogrammed default
   435                           ;	Flash Program Memory Code Protection bit
   436                           ;	CP = OFF, Code protection off
   437     2007                     	org	8199
   438     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      8       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 12 19:49:47 2025

                     l21 0019                       u27 0022                       u37 0032  
                    l574 0013                      l576 001C                      l578 0029  
                    _RB0 0030                      _RC0 0038                      _RC1 0039  
                    _ISR 003D                     ?_ISR 0070                     i1l30 0054  
                   u1_20 0043                     u1_21 0042                     u4_27 004A  
                   _main 0013                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l580 003D  
                  i1l582 0043                    i1l584 0044                    i1l586 0051  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 003D                   ??_main 0075  
                 _TRISB0 0430                   _TRISB1 0431                   _TRISC0 0438  
                 _TRISC1 0439                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070               __pmaintext 0013               __pintentry 0004  
                __ptext1 003D     end_of_initialization 000F      start_initialization 000F  
            __end_of_ISR 005B                ___latbits 0002        interrupt_function 0004  
               intlevel1 0000  
