

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Mar 13 21:46:21 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0004                     fsr             equ	4
    46     0004                     fsr0            equ	4
    47     0000                     indf            equ	0
    48     0000                     indf0           equ	0
    49     0002                     pc              equ	2
    50     0002                     pcl             equ	2
    51     000A                     pclath          equ	10
    52     0003                     status          equ	3
    53     0000                     INDF            equ	0	;# 
    54     0001                     TMR0            equ	1	;# 
    55     0002                     PCL             equ	2	;# 
    56     0003                     STATUS          equ	3	;# 
    57     0004                     FSR             equ	4	;# 
    58     0005                     PORTA           equ	5	;# 
    59     0006                     PORTB           equ	6	;# 
    60     0007                     PORTC           equ	7	;# 
    61     0008                     PORTD           equ	8	;# 
    62     0009                     PORTE           equ	9	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001B                     CCPR2           equ	27	;# 
    83     001B                     CCPR2L          equ	27	;# 
    84     001C                     CCPR2H          equ	28	;# 
    85     001D                     CCP2CON         equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     0088                     TRISD           equ	136	;# 
    93     0089                     TRISE           equ	137	;# 
    94     008C                     PIE1            equ	140	;# 
    95     008D                     PIE2            equ	141	;# 
    96     008E                     PCON            equ	142	;# 
    97     0091                     SSPCON2         equ	145	;# 
    98     0092                     PR2             equ	146	;# 
    99     0093                     SSPADD          equ	147	;# 
   100     0094                     SSPSTAT         equ	148	;# 
   101     0098                     TXSTA           equ	152	;# 
   102     0099                     SPBRG           equ	153	;# 
   103     009C                     CMCON           equ	156	;# 
   104     009D                     CVRCON          equ	157	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     0008                     PORTD           equ	8	;# 
   122     0009                     PORTE           equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PIR1            equ	12	;# 
   126     000D                     PIR2            equ	13	;# 
   127     000E                     TMR1            equ	14	;# 
   128     000E                     TMR1L           equ	14	;# 
   129     000F                     TMR1H           equ	15	;# 
   130     0010                     T1CON           equ	16	;# 
   131     0011                     TMR2            equ	17	;# 
   132     0012                     T2CON           equ	18	;# 
   133     0013                     SSPBUF          equ	19	;# 
   134     0014                     SSPCON          equ	20	;# 
   135     0015                     CCPR1           equ	21	;# 
   136     0015                     CCPR1L          equ	21	;# 
   137     0016                     CCPR1H          equ	22	;# 
   138     0017                     CCP1CON         equ	23	;# 
   139     0018                     RCSTA           equ	24	;# 
   140     0019                     TXREG           equ	25	;# 
   141     001A                     RCREG           equ	26	;# 
   142     001B                     CCPR2           equ	27	;# 
   143     001B                     CCPR2L          equ	27	;# 
   144     001C                     CCPR2H          equ	28	;# 
   145     001D                     CCP2CON         equ	29	;# 
   146     001E                     ADRESH          equ	30	;# 
   147     001F                     ADCON0          equ	31	;# 
   148     0081                     OPTION_REG      equ	129	;# 
   149     0085                     TRISA           equ	133	;# 
   150     0086                     TRISB           equ	134	;# 
   151     0087                     TRISC           equ	135	;# 
   152     0088                     TRISD           equ	136	;# 
   153     0089                     TRISE           equ	137	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008D                     PIE2            equ	141	;# 
   156     008E                     PCON            equ	142	;# 
   157     0091                     SSPCON2         equ	145	;# 
   158     0092                     PR2             equ	146	;# 
   159     0093                     SSPADD          equ	147	;# 
   160     0094                     SSPSTAT         equ	148	;# 
   161     0098                     TXSTA           equ	152	;# 
   162     0099                     SPBRG           equ	153	;# 
   163     009C                     CMCON           equ	156	;# 
   164     009D                     CVRCON          equ	157	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173     0015                     _CCPR1L         set	21
   174     00BD                     _CCP1X          set	189
   175     00BC                     _CCP1Y          set	188
   176     0092                     _TMR2ON         set	146
   177     0091                     _T2CKPS1        set	145
   178     0090                     _T2CKPS0        set	144
   179     00BA                     _CCP1M2         set	186
   180     00BB                     _CCP1M3         set	187
   181     0092                     _PR2            set	146
   182     043A                     _TRISC2         set	1082
   183                           
   184                           	psect	cinit
   185     07FC                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FC                     __initialization:
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2F95   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_PWM1_Set_Duty:
   199     0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     PWM1_Set_Duty@DC:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 2 bytes @ 0x0
   207     0070                     	ds	2
   208     0072                     ??_PWM1_Set_Duty:
   209                           
   210                           ; 1 bytes @ 0x2
   211     0072                     	ds	2
   212     0074                     ??_main:
   213                           
   214                           ; 1 bytes @ 0x4
   215     0074                     	ds	2
   216     0076                     main@DC:
   217                           
   218                           ; 2 bytes @ 0x6
   219     0076                     	ds	2
   220                           
   221                           	psect	maintext
   222     0795                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 18 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  DC              2    6[COMMON] unsigned short 
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         2       0       0       0       0
   244 ;;      Temps:          2       0       0       0       0
   245 ;;      Totals:         4       0       0       0       0
   246 ;;Total ram usage:        4 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_PWM1_Set_Duty
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255     0795                     _main:	
   256                           ;psect for function _main
   257                           
   258     0795                     l622:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261                           
   262                           
   263                           ;main.c: 21:     CCP1M3 = 1;
   264     0795  1283               	bcf	3,5	;RP0=0, select bank0
   265     0796  1303               	bcf	3,6	;RP1=0, select bank0
   266     0797  1597               	bsf	23,3	;volatile
   267                           
   268                           ;main.c: 22:     CCP1M2 = 1;
   269     0798  1517               	bsf	23,2	;volatile
   270                           
   271                           ;main.c: 25:     TRISC2 = 0;
   272     0799  1683               	bsf	3,5	;RP0=1, select bank1
   273     079A  1303               	bcf	3,6	;RP1=0, select bank1
   274     079B  1107               	bcf	7,2	;volatile
   275                           
   276                           ;main.c: 28:     PR2 = 124;
   277     079C  307C               	movlw	124
   278     079D  0092               	movwf	18	;volatile
   279                           
   280                           ;main.c: 31:     T2CKPS0 = 1;
   281     079E  1283               	bcf	3,5	;RP0=0, select bank0
   282     079F  1303               	bcf	3,6	;RP1=0, select bank0
   283     07A0  1412               	bsf	18,0	;volatile
   284                           
   285                           ;main.c: 32:     T2CKPS1 = 0;
   286     07A1  1092               	bcf	18,1	;volatile
   287                           
   288                           ;main.c: 35:     TMR2ON = 1;
   289     07A2  1512               	bsf	18,2	;volatile
   290     07A3                     l624:
   291     07A3                     l29:	
   292                           ;main.c: 40:     while(1) {
   293                           
   294                           
   295                           ;main.c: 42:         DC = 0;
   296     07A3  01F6               	clrf	main@DC
   297     07A4  01F7               	clrf	main@DC+1
   298                           
   299                           ;main.c: 45:         while(DC<500) {
   300     07A5  2FBE               	goto	l632
   301     07A6                     l626:
   302                           
   303                           ;main.c: 46:             PWM1_Set_Duty(DC);
   304     07A6  0877               	movf	main@DC+1,w
   305     07A7  00F1               	movwf	PWM1_Set_Duty@DC+1
   306     07A8  0876               	movf	main@DC,w
   307     07A9  00F0               	movwf	PWM1_Set_Duty@DC
   308     07AA  120A  118A  2774  120A  118A  	fcall	_PWM1_Set_Duty
   309     07AF                     l628:
   310                           
   311                           ;main.c: 47:             DC++;
   312     07AF  3001               	movlw	1
   313     07B0  07F6               	addwf	main@DC,f
   314     07B1  1803               	skipnc
   315     07B2  0AF7               	incf	main@DC+1,f
   316     07B3  3000               	movlw	0
   317     07B4  07F7               	addwf	main@DC+1,f
   318     07B5                     l630:
   319                           
   320                           ;main.c: 48:             _delay((unsigned long)((2)*(4000000/4000.0)));
   321     07B5  3003               	movlw	3
   322     07B6  00F5               	movwf	??_main+1
   323     07B7  3097               	movlw	151
   324     07B8  00F4               	movwf	??_main
   325     07B9                     u117:
   326     07B9  0BF4               	decfsz	??_main,f
   327     07BA  2FB9               	goto	u117
   328     07BB  0BF5               	decfsz	??_main+1,f
   329     07BC  2FB9               	goto	u117
   330     07BD  2FBE               	nop2
   331     07BE                     l632:
   332                           
   333                           ;main.c: 45:         while(DC<500) {
   334     07BE  3001               	movlw	1
   335     07BF  0277               	subwf	main@DC+1,w
   336     07C0  30F4               	movlw	244
   337     07C1  1903               	skipnz
   338     07C2  0276               	subwf	main@DC,w
   339     07C3  1C03               	skipc
   340     07C4  2FC6               	goto	u91
   341     07C5  2FC7               	goto	u90
   342     07C6                     u91:
   343     07C6  2FA6               	goto	l626
   344     07C7                     u90:
   345     07C7                     l634:
   346                           
   347                           ;main.c: 50:         _delay((unsigned long)((100)*(4000000/4000.0)));
   348     07C7  3082               	movlw	130
   349     07C8  00F5               	movwf	??_main+1
   350     07C9  30DD               	movlw	221
   351     07CA  00F4               	movwf	??_main
   352     07CB                     u127:
   353     07CB  0BF4               	decfsz	??_main,f
   354     07CC  2FCB               	goto	u127
   355     07CD  0BF5               	decfsz	??_main+1,f
   356     07CE  2FCB               	goto	u127
   357     07CF  2FD0               	nop2
   358                           
   359                           ;main.c: 53:         while(DC>0) {
   360     07D0  2FE9               	goto	l642
   361     07D1                     l636:
   362                           
   363                           ;main.c: 55:             PWM1_Set_Duty(DC);
   364     07D1  0877               	movf	main@DC+1,w
   365     07D2  00F1               	movwf	PWM1_Set_Duty@DC+1
   366     07D3  0876               	movf	main@DC,w
   367     07D4  00F0               	movwf	PWM1_Set_Duty@DC
   368     07D5  120A  118A  2774  120A  118A  	fcall	_PWM1_Set_Duty
   369     07DA                     l638:
   370                           
   371                           ;main.c: 56:             DC--;
   372     07DA  3001               	movlw	1
   373     07DB  02F6               	subwf	main@DC,f
   374     07DC  3000               	movlw	0
   375     07DD  1C03               	skipc
   376     07DE  03F7               	decf	main@DC+1,f
   377     07DF  02F7               	subwf	main@DC+1,f
   378     07E0                     l640:
   379                           
   380                           ;main.c: 57:             _delay((unsigned long)((2)*(4000000/4000.0)));
   381     07E0  3003               	movlw	3
   382     07E1  00F5               	movwf	??_main+1
   383     07E2  3097               	movlw	151
   384     07E3  00F4               	movwf	??_main
   385     07E4                     u137:
   386     07E4  0BF4               	decfsz	??_main,f
   387     07E5  2FE4               	goto	u137
   388     07E6  0BF5               	decfsz	??_main+1,f
   389     07E7  2FE4               	goto	u137
   390     07E8  2FE9               	nop2
   391     07E9                     l642:
   392                           
   393                           ;main.c: 53:         while(DC>0) {
   394     07E9  0876               	movf	main@DC,w
   395     07EA  0477               	iorwf	main@DC+1,w
   396     07EB  1D03               	btfss	3,2
   397     07EC  2FEE               	goto	u101
   398     07ED  2FEF               	goto	u100
   399     07EE                     u101:
   400     07EE  2FD1               	goto	l636
   401     07EF                     u100:
   402     07EF                     l644:
   403                           
   404                           ;main.c: 59:         _delay((unsigned long)((100)*(4000000/4000.0)));
   405     07EF  3082               	movlw	130
   406     07F0  00F5               	movwf	??_main+1
   407     07F1  30DD               	movlw	221
   408     07F2  00F4               	movwf	??_main
   409     07F3                     u147:
   410     07F3  0BF4               	decfsz	??_main,f
   411     07F4  2FF3               	goto	u147
   412     07F5  0BF5               	decfsz	??_main+1,f
   413     07F6  2FF3               	goto	u147
   414     07F7  2FF8               	nop2
   415     07F8  2FA3               	goto	l29
   416     07F9  120A  118A  2800   	ljmp	start
   417     07FC                     __end_of_main:
   418                           
   419                           	psect	text1
   420     0774                     __ptext1:	
   421 ;; *************** function _PWM1_Set_Duty *****************
   422 ;; Defined at:
   423 ;;		line 65 in file "main.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;  DC              2    0[COMMON] unsigned short 
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         2       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          2       0       0       0       0
   440 ;;      Totals:         4       0       0       0       0
   441 ;;Total ram usage:        4 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450     0774                     _PWM1_Set_Duty:	
   451                           ;psect for function _PWM1_Set_Duty
   452                           
   453     0774                     l616:	
   454                           ;incstack = 0
   455                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   456                           
   457                           
   458                           ;main.c: 67:     if(DC<1024){
   459     0774  3004               	movlw	4
   460     0775  0271               	subwf	PWM1_Set_Duty@DC+1,w
   461     0776  3000               	movlw	0
   462     0777  1903               	skipnz
   463     0778  0270               	subwf	PWM1_Set_Duty@DC,w
   464     0779  1803               	skipnc
   465     077A  2F7C               	goto	u61
   466     077B  2F7D               	goto	u60
   467     077C                     u61:
   468     077C  2F94               	goto	l42
   469     077D                     u60:
   470     077D                     l618:
   471                           
   472                           ;main.c: 69:         CCP1Y = DC & 1;
   473     077D  1870               	btfsc	PWM1_Set_Duty@DC,0
   474     077E  2F80               	goto	u71
   475     077F  2F84               	goto	u70
   476     0780                     u71:
   477     0780  1283               	bcf	3,5	;RP0=0, select bank0
   478     0781  1303               	bcf	3,6	;RP1=0, select bank0
   479     0782  1617               	bsf	23,4	;volatile
   480     0783  2F87               	goto	u84
   481     0784                     u70:
   482     0784  1283               	bcf	3,5	;RP0=0, select bank0
   483     0785  1303               	bcf	3,6	;RP1=0, select bank0
   484     0786  1217               	bcf	23,4	;volatile
   485     0787                     u84:
   486                           
   487                           ;main.c: 70:         CCP1X = DC & 2;
   488     0787  1297               	bcf	23,5	;volatile
   489     0788                     l620:
   490                           
   491                           ;main.c: 71:         CCPR1L = DC >> 2;
   492     0788  0871               	movf	PWM1_Set_Duty@DC+1,w
   493     0789  00F3               	movwf	??_PWM1_Set_Duty+1
   494     078A  0870               	movf	PWM1_Set_Duty@DC,w
   495     078B  00F2               	movwf	??_PWM1_Set_Duty
   496     078C  1003               	clrc
   497     078D  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   498     078E  0CF2               	rrf	??_PWM1_Set_Duty,f
   499     078F  1003               	clrc
   500     0790  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   501     0791  0CF2               	rrf	??_PWM1_Set_Duty,f
   502     0792  0872               	movf	??_PWM1_Set_Duty,w
   503     0793  0095               	movwf	21	;volatile
   504     0794                     l42:
   505     0794  0008               	return
   506     0795                     __end_of_PWM1_Set_Duty:
   507     0002                     ___latbits      equ	2
   508     007E                     btemp           set	126	;btemp
   509     007E                     wtemp0          set	126
   510                           
   511                           	psect	config
   512                           
   513                           ;Config register CONFIG @ 0x2007
   514                           ;	Oscillator Selection bits
   515                           ;	FOSC = XT, XT oscillator
   516                           ;	Watchdog Timer Enable bit
   517                           ;	WDTE = OFF, WDT disabled
   518                           ;	Power-up Timer Enable bit
   519                           ;	PWRTE = OFF, PWRT disabled
   520                           ;	Brown-out Reset Enable bit
   521                           ;	BOREN = ON, BOR enabled
   522                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   523                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   524                           ;	Data EEPROM Memory Code Protection bit
   525                           ;	CPD = OFF, Data EEPROM code protection off
   526                           ;	Flash Program Memory Write Enable bits
   527                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   528                           ;	In-Circuit Debugger Mode bit
   529                           ;	DEBUG = 0x1, unprogrammed default
   530                           ;	Flash Program Memory Code Protection bit
   531                           ;	CP = OFF, Code protection off
   532     2007                     	org	8199
   533     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     160
                                              4 COMMON     4     4      0
                      _PWM1_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        4     2      2      68
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      8       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Mar 13 21:46:21 2025

                     l42 0794                       l29 07A3                       u60 077D  
                     u61 077C                       u70 0784                       u71 0780  
                     u90 07C7                       u91 07C6                       u84 0787  
                    l620 0788                      l630 07B5                      l622 0795  
                    l616 0774                      l640 07E0                      l632 07BE  
                    l624 07A3                      l618 077D                      l642 07E9  
                    l634 07C7                      l626 07A6                      l644 07EF  
                    l636 07D1                      l628 07AF                      l638 07DA  
                    u100 07EF                      u101 07EE                      u117 07B9  
                    u127 07CB                      u137 07E4                      u147 07F3  
                    _PR2 0092                     _main 0795                     btemp 007E  
                   start 0000                    ?_main 0070                    _CCP1X 00BD  
                  _CCP1Y 00BC                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISC2 043A                   main@DC 0076  
__end_of__initialization 07FC           __pcstackCOMMON 0070    __end_of_PWM1_Set_Duty 0795  
             __pmaintext 0795                  _T2CKPS0 0090                  _T2CKPS1 0091  
                __ptext1 0774     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002            _PWM1_Set_Duty 0774           ?_PWM1_Set_Duty 0070  
        ??_PWM1_Set_Duty 0072          PWM1_Set_Duty@DC 0070  
