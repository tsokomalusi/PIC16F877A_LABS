

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jan 29 21:39:09 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0006                     _PORTB          set	6
   173     0086                     _TRISB          set	134
   174                           
   175                           	psect	cinit
   176     07FC                     start_initialization:	
   177                           ; #config settings
   178                           
   179     07FC                     __initialization:
   180     07FC                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183     07FC                     __end_of__initialization:
   184     07FC  0183               	clrf	3
   185     07FD  120A  118A  2F79   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188     0070                     __pcstackCOMMON:
   189     0070                     ?_main:
   190     0070                     ??_main:	
   191                           ; 1 bytes @ 0x0
   192                           
   193                           
   194                           ; 1 bytes @ 0x0
   195     0070                     	ds	3
   196     0073                     main@j:
   197                           
   198                           ; 2 bytes @ 0x3
   199     0073                     	ds	2
   200     0075                     main@j_37:
   201                           
   202                           ; 2 bytes @ 0x5
   203     0075                     	ds	2
   204     0077                     main@i:
   205                           
   206                           ; 1 bytes @ 0x7
   207     0077                     	ds	1
   208                           
   209                           	psect	maintext
   210     0779                     __pmaintext:	
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 16 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;  j               2    5[COMMON] int 
   221 ;;  j               2    3[COMMON] int 
   222 ;;  i               1    7[COMMON] unsigned char 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, btemp+1
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         5       0       0       0       0
   234 ;;      Temps:          3       0       0       0       0
   235 ;;      Totals:         8       0       0       0       0
   236 ;;Total ram usage:        8 bytes
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244     0779                     _main:	
   245                           ;psect for function _main
   246                           
   247     0779                     l564:	
   248                           ;incstack = 0
   249                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   250                           
   251                           
   252                           ;main.c: 18:     TRISB = 0X00;
   253     0779  1683               	bsf	3,5	;RP0=1, select bank1
   254     077A  1303               	bcf	3,6	;RP1=0, select bank1
   255     077B  0186               	clrf	6	;volatile
   256                           
   257                           ;main.c: 19:     PORTB = 0X00;
   258     077C  1283               	bcf	3,5	;RP0=0, select bank0
   259     077D  1303               	bcf	3,6	;RP1=0, select bank0
   260     077E  0186               	clrf	6	;volatile
   261                           
   262                           ;main.c: 21:     unsigned char i = 0;
   263     077F  01F7               	clrf	main@i
   264     0780                     l11:	
   265                           ;main.c: 23:     while(1) {
   266                           
   267                           
   268                           ;main.c: 27:         for (int j=0; j<48; j++) {
   269     0780  01F3               	clrf	main@j
   270     0781  01F4               	clrf	main@j+1
   271     0782                     l570:
   272                           
   273                           ;main.c: 29:             PORTB = (1<<i);
   274     0782  3001               	movlw	1
   275     0783  00F0               	movwf	??_main
   276     0784  0A77               	incf	main@i,w
   277     0785  2F88               	goto	u14
   278     0786                     u15:
   279     0786  1003               	clrc
   280     0787  0DF0               	rlf	??_main,f
   281     0788                     u14:
   282     0788  3EFF               	addlw	-1
   283     0789  1D03               	skipz
   284     078A  2F86               	goto	u15
   285     078B  0870               	movf	??_main,w
   286     078C  1283               	bcf	3,5	;RP0=0, select bank0
   287     078D  1303               	bcf	3,6	;RP1=0, select bank0
   288     078E  0086               	movwf	6	;volatile
   289                           
   290                           ;main.c: 30:             i++;
   291     078F  3001               	movlw	1
   292     0790  07F7               	addwf	main@i,f
   293     0791                     l572:
   294                           
   295                           ;main.c: 31:             _delay((unsigned long)((25)*(4000000/4000.0)));
   296     0791  3021               	movlw	33
   297     0792  00F1               	movwf	??_main+1
   298     0793  3076               	movlw	118
   299     0794  00F0               	movwf	??_main
   300     0795                     u77:
   301     0795  0BF0               	decfsz	??_main,f
   302     0796  2F95               	goto	u77
   303     0797  0BF1               	decfsz	??_main+1,f
   304     0798  2F95               	goto	u77
   305     0799  0000               	nop
   306     079A                     l574:
   307                           
   308                           ;main.c: 33:             if (i==4)
   309     079A  3004               	movlw	4
   310     079B  0677               	xorwf	main@i,w
   311     079C  1D03               	btfss	3,2
   312     079D  2F9F               	goto	u21
   313     079E  2FA0               	goto	u20
   314     079F                     u21:
   315     079F  2FA1               	goto	l578
   316     07A0                     u20:
   317     07A0                     l576:
   318                           
   319                           ;main.c: 34:                 i=0;
   320     07A0  01F7               	clrf	main@i
   321     07A1                     l578:
   322                           
   323                           ;main.c: 35:         }
   324     07A1  3001               	movlw	1
   325     07A2  07F3               	addwf	main@j,f
   326     07A3  1803               	skipnc
   327     07A4  0AF4               	incf	main@j+1,f
   328     07A5  3000               	movlw	0
   329     07A6  07F4               	addwf	main@j+1,f
   330     07A7                     l580:
   331     07A7  0874               	movf	main@j+1,w
   332     07A8  3A80               	xorlw	128
   333     07A9  00FF               	movwf	btemp+1
   334     07AA  3080               	movlw	128
   335     07AB  027F               	subwf	btemp+1,w
   336     07AC  1D03               	skipz
   337     07AD  2FB0               	goto	u35
   338     07AE  3030               	movlw	48
   339     07AF  0273               	subwf	main@j,w
   340     07B0                     u35:
   341     07B0  1C03               	skipc
   342     07B1  2FB3               	goto	u31
   343     07B2  2FB4               	goto	u30
   344     07B3                     u31:
   345     07B3  2F82               	goto	l570
   346     07B4                     u30:
   347     07B4                     l582:
   348                           
   349                           ;main.c: 38:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   350     07B4  3006               	movlw	6
   351     07B5  00F2               	movwf	??_main+2
   352     07B6  3013               	movlw	19
   353     07B7  00F1               	movwf	??_main+1
   354     07B8  30AD               	movlw	173
   355     07B9  00F0               	movwf	??_main
   356     07BA                     u87:
   357     07BA  0BF0               	decfsz	??_main,f
   358     07BB  2FBA               	goto	u87
   359     07BC  0BF1               	decfsz	??_main+1,f
   360     07BD  2FBA               	goto	u87
   361     07BE  0BF2               	decfsz	??_main+2,f
   362     07BF  2FBA               	goto	u87
   363     07C0  2FC1               	nop2
   364     07C1                     l584:
   365                           
   366                           ;main.c: 42:         for(int j=0; j<48; j++){
   367     07C1  01F5               	clrf	main@j_37
   368     07C2  01F6               	clrf	main@j_37+1
   369     07C3                     l590:
   370                           
   371                           ;main.c: 44:             PORTB = (8>>i);
   372     07C3  0A77               	incf	main@i,w
   373     07C4  00FF               	movwf	btemp+1
   374     07C5  3008               	movlw	8
   375     07C6  00F0               	movwf	??_main
   376     07C7  3000               	movlw	0
   377     07C8  00F1               	movwf	??_main+1
   378     07C9  2FCD               	goto	u44
   379     07CA                     u45:
   380     07CA  0D71               	rlf	??_main+1,w
   381     07CB  0CF1               	rrf	??_main+1,f
   382     07CC  0CF0               	rrf	??_main,f
   383     07CD                     u44:
   384     07CD  0BFF               	decfsz	btemp+1,f
   385     07CE  2FCA               	goto	u45
   386     07CF  0870               	movf	??_main,w
   387     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   388     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   389     07D2  0086               	movwf	6	;volatile
   390     07D3                     l592:
   391                           
   392                           ;main.c: 45:             i++;
   393     07D3  3001               	movlw	1
   394     07D4  07F7               	addwf	main@i,f
   395     07D5                     l594:
   396                           
   397                           ;main.c: 46:             _delay((unsigned long)((25)*(4000000/4000.0)));
   398     07D5  3021               	movlw	33
   399     07D6  00F1               	movwf	??_main+1
   400     07D7  3076               	movlw	118
   401     07D8  00F0               	movwf	??_main
   402     07D9                     u97:
   403     07D9  0BF0               	decfsz	??_main,f
   404     07DA  2FD9               	goto	u97
   405     07DB  0BF1               	decfsz	??_main+1,f
   406     07DC  2FD9               	goto	u97
   407     07DD  0000               	nop
   408     07DE                     l596:
   409                           
   410                           ;main.c: 48:             if (i==4)
   411     07DE  3004               	movlw	4
   412     07DF  0677               	xorwf	main@i,w
   413     07E0  1D03               	btfss	3,2
   414     07E1  2FE3               	goto	u51
   415     07E2  2FE4               	goto	u50
   416     07E3                     u51:
   417     07E3  2FE5               	goto	l600
   418     07E4                     u50:
   419     07E4                     l598:
   420                           
   421                           ;main.c: 49:                 i=0;
   422     07E4  01F7               	clrf	main@i
   423     07E5                     l600:
   424                           
   425                           ;main.c: 50:         }
   426     07E5  3001               	movlw	1
   427     07E6  07F5               	addwf	main@j_37,f
   428     07E7  1803               	skipnc
   429     07E8  0AF6               	incf	main@j_37+1,f
   430     07E9  3000               	movlw	0
   431     07EA  07F6               	addwf	main@j_37+1,f
   432     07EB                     l602:
   433     07EB  0876               	movf	main@j_37+1,w
   434     07EC  3A80               	xorlw	128
   435     07ED  00FF               	movwf	btemp+1
   436     07EE  3080               	movlw	128
   437     07EF  027F               	subwf	btemp+1,w
   438     07F0  1D03               	skipz
   439     07F1  2FF4               	goto	u65
   440     07F2  3030               	movlw	48
   441     07F3  0275               	subwf	main@j_37,w
   442     07F4                     u65:
   443     07F4  1C03               	skipc
   444     07F5  2FF7               	goto	u61
   445     07F6  2FF8               	goto	u60
   446     07F7                     u61:
   447     07F7  2FC3               	goto	l590
   448     07F8                     u60:
   449     07F8  2F80               	goto	l11
   450     07F9  120A  118A  2800   	ljmp	start
   451     07FC                     __end_of_main:
   452     0002                     ___latbits      equ	2
   453     007E                     btemp           set	126	;btemp
   454     007E                     wtemp0          set	126
   455                           
   456                           	psect	config
   457                           
   458                           ;Config register CONFIG @ 0x2007
   459                           ;	Oscillator Selection bits
   460                           ;	FOSC = XT, XT oscillator
   461                           ;	Watchdog Timer Enable bit
   462                           ;	WDTE = OFF, WDT disabled
   463                           ;	Power-up Timer Enable bit
   464                           ;	PWRTE = OFF, PWRT disabled
   465                           ;	Brown-out Reset Enable bit
   466                           ;	BOREN = ON, BOR enabled
   467                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   468                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   469                           ;	Data EEPROM Memory Code Protection bit
   470                           ;	CPD = OFF, Data EEPROM code protection off
   471                           ;	Flash Program Memory Write Enable bits
   472                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   473                           ;	In-Circuit Debugger Mode bit
   474                           ;	DEBUG = 0x1, unprogrammed default
   475                           ;	Flash Program Memory Code Protection bit
   476                           ;	CP = OFF, Code protection off
   477     2007                     	org	8199
   478     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     120
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      8       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jan 29 21:39:09 2025

                     l11 0780                       u20 07A0                       u21 079F  
                     u30 07B4                       u14 0788                       u31 07B3  
                     u15 0786                       u50 07E4                       u51 07E3  
                     u35 07B0                       u60 07F8                       u44 07CD  
                     u61 07F7                       u45 07CA                       u65 07F4  
                     u77 0795                       u87 07BA                       u97 07D9  
                    l600 07E5                      l602 07EB                      l570 0782  
                    l580 07A7                      l572 0791                      l564 0779  
                    l590 07C3                      l582 07B4                      l574 079A  
                    l592 07D3                      l584 07C1                      l576 07A0  
                    l594 07D5                      l578 07A1                      l596 07DE  
                    l598 07E4                     _main 0779                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    main@i 0077                    main@j 0073  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0779     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                 main@j_37 0075  
