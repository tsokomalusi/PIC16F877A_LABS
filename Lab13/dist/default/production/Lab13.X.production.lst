

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Mar 11 19:16:26 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0015                     _CCPR1          set	21
   176     000E                     _TMR1           set	14
   177     0062                     _CCP1IF         set	98
   178     005F                     _GIE            set	95
   179     005E                     _PEIE           set	94
   180     00BB                     _CCP1M3         set	187
   181     00BA                     _CCP1M2         set	186
   182     00B9                     _CCP1M1         set	185
   183     00B8                     _CCP1M0         set	184
   184     0080                     _TMR1ON         set	128
   185     0085                     _T1CKPS1        set	133
   186     0084                     _T1CKPS0        set	132
   187     0081                     _TMR1CS         set	129
   188     003C                     _RC4            set	60
   189     0462                     _CCP1IE         set	1122
   190     043C                     _TRISC4         set	1084
   191                           
   192                           	psect	cinit
   193     000F                     start_initialization:	
   194                           ; #config settings
   195                           
   196     000F                     __initialization:
   197                           
   198                           ; Clear objects allocated to COMMON
   199     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   200     0010                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203     0010                     __end_of__initialization:
   204     0010  0183               	clrf	3
   205     0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMMON
   208     0072                     __pbssCOMMON:
   209     0072                     _X:
   210     0072                     	ds	1
   211                           
   212                           	psect	cstackCOMMON
   213     0070                     __pcstackCOMMON:
   214     0070                     ?_main:
   215     0070                     ?_ISR:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ??_ISR:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223     0070                     	ds	2
   224     0072                     ??_main:
   225                           
   226                           	psect	maintext
   227     0014                     __pmaintext:	
   228                           ; 1 bytes @ 0x2
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 17 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		status,2
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called: 1
   254 ;; This function calls:
   255 ;;		Nothing
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261     0014                     _main:	
   262                           ;psect for function _main
   263                           
   264     0014                     l593:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [status,2]
   267                           
   268                           
   269                           ;main.c: 21:     TRISC4=0;
   270     0014  1683               	bsf	3,5	;RP0=1, select bank1
   271     0015  1303               	bcf	3,6	;RP1=0, select bank1
   272     0016  1207               	bcf	7,4	;volatile
   273                           
   274                           ;main.c: 22:     RC4 = 0;
   275     0017  1283               	bcf	3,5	;RP0=0, select bank0
   276     0018  1303               	bcf	3,6	;RP1=0, select bank0
   277     0019  1207               	bcf	7,4	;volatile
   278     001A                     l595:
   279                           
   280                           ;main.c: 26:     TMR1 = 0;
   281     001A  018E               	clrf	14	;volatile
   282     001B  018F               	clrf	15	;volatile
   283     001C                     l597:
   284                           
   285                           ;main.c: 29:     TMR1CS = 0;
   286     001C  1090               	bcf	16,1	;volatile
   287     001D                     l599:
   288                           
   289                           ;main.c: 32:     T1CKPS0 = 0;
   290     001D  1210               	bcf	16,4	;volatile
   291     001E                     l601:
   292                           
   293                           ;main.c: 33:     T1CKPS1 = 0;
   294     001E  1290               	bcf	16,5	;volatile
   295     001F                     l603:
   296                           
   297                           ;main.c: 36:     TMR1ON = 1;
   298     001F  1410               	bsf	16,0	;volatile
   299     0020                     l605:
   300                           
   301                           ;main.c: 40:     CCPR1 = 50000;
   302     0020  30C3               	movlw	195
   303     0021  0096               	movwf	22	;volatile
   304     0022  3050               	movlw	80
   305     0023  0095               	movwf	21	;volatile
   306     0024                     l607:
   307                           
   308                           ;main.c: 43:     CCP1M0 = 1;
   309     0024  1417               	bsf	23,0	;volatile
   310     0025                     l609:
   311                           
   312                           ;main.c: 44:     CCP1M1 = 1;
   313     0025  1497               	bsf	23,1	;volatile
   314     0026                     l611:
   315                           
   316                           ;main.c: 45:     CCP1M2 = 0;
   317     0026  1117               	bcf	23,2	;volatile
   318     0027                     l613:
   319                           
   320                           ;main.c: 46:     CCP1M3 = 1;
   321     0027  1597               	bsf	23,3	;volatile
   322     0028                     l615:
   323                           
   324                           ;main.c: 49:     CCP1IE = 1;
   325     0028  1683               	bsf	3,5	;RP0=1, select bank1
   326     0029  1303               	bcf	3,6	;RP1=0, select bank1
   327     002A  150C               	bsf	12,2	;volatile
   328     002B                     l617:
   329                           
   330                           ;main.c: 50:     PEIE = 1;
   331     002B  170B               	bsf	11,6	;volatile
   332     002C                     l619:
   333                           
   334                           ;main.c: 51:     GIE = 1;
   335     002C  178B               	bsf	11,7	;volatile
   336     002D                     l39:	
   337                           ;main.c: 55:     while(1) {
   338                           
   339     002D                     l40:	
   340                           ;main.c: 58:     }
   341                           
   342     002D  282D               	goto	l39
   343     002E  120A  118A  280C   	ljmp	start
   344     0031                     __end_of_main:
   345                           
   346                           	psect	text1
   347     0031                     __ptext1:	
   348 ;; *************** function _ISR *****************
   349 ;; Defined at:
   350 ;;		line 63 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          2       0       0       0       0
   367 ;;      Totals:         2       0       0       0       0
   368 ;;Total ram usage:        2 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		Interrupt level 1
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     0031                     _ISR:	
   378                           ;psect for function _ISR
   379                           
   380     0031                     i1l621:
   381                           
   382                           ;main.c: 65:     if(CCP1IF) {
   383     0031  1283               	bcf	3,5	;RP0=0, select bank0
   384     0032  1303               	bcf	3,6	;RP1=0, select bank0
   385     0033  1D0C               	btfss	12,2	;volatile
   386     0034  2836               	goto	u1_21
   387     0035  2837               	goto	u1_20
   388     0036                     u1_21:
   389     0036  2843               	goto	i1l49
   390     0037                     u1_20:
   391     0037                     i1l623:
   392                           
   393                           ;main.c: 67:         X++;
   394     0037  3001               	movlw	1
   395     0038  07F2               	addwf	_X,f
   396                           
   397                           ;main.c: 68:         if(X==10){
   398     0039  300A               	movlw	10
   399     003A  0672               	xorwf	_X,w
   400     003B  1D03               	btfss	3,2
   401     003C  283E               	goto	u2_21
   402     003D  283F               	goto	u2_20
   403     003E                     u2_21:
   404     003E  2842               	goto	i1l629
   405     003F                     u2_20:
   406     003F                     i1l625:
   407                           
   408                           ;main.c: 71:             RC4 = ~RC4;
   409     003F  3010               	movlw	16
   410     0040  0687               	xorwf	7,f
   411     0041                     i1l627:
   412                           
   413                           ;main.c: 72:             X = 0;
   414     0041  01F2               	clrf	_X
   415     0042                     i1l629:
   416                           
   417                           ;main.c: 76:     CCP1IF = 0;
   418     0042  110C               	bcf	12,2	;volatile
   419     0043                     i1l49:
   420     0043  0871               	movf	??_ISR+1,w
   421     0044  008A               	movwf	10
   422     0045  0E70               	swapf	??_ISR,w
   423     0046  0083               	movwf	3
   424     0047  0EFE               	swapf	btemp,f
   425     0048  0E7E               	swapf	btemp,w
   426     0049  0009               	retfie
   427     004A                     __end_of_ISR:
   428     0002                     ___latbits      equ	2
   429     007E                     btemp           set	126	;btemp
   430     007E                     wtemp0          set	126
   431                           
   432                           	psect	intentry
   433     0004                     __pintentry:	
   434                           ;incstack = 0
   435                           ; Regs used in _ISR: [wreg+status,2+status,0]
   436                           
   437     0004                     interrupt_function:
   438     007E                     saved_w         set	btemp
   439     0004  00FE               	movwf	btemp
   440     0005  0E03               	swapf	3,w
   441     0006  00F0               	movwf	??_ISR
   442     0007  080A               	movf	10,w
   443     0008  00F1               	movwf	??_ISR+1
   444     0009  120A  118A  2831   	ljmp	_ISR
   445                           
   446                           	psect	config
   447                           
   448                           ;Config register CONFIG @ 0x2007
   449                           ;	Oscillator Selection bits
   450                           ;	FOSC = XT, XT oscillator
   451                           ;	Watchdog Timer Enable bit
   452                           ;	WDTE = OFF, WDT disabled
   453                           ;	Power-up Timer Enable bit
   454                           ;	PWRTE = OFF, PWRT disabled
   455                           ;	Brown-out Reset Enable bit
   456                           ;	BOREN = ON, BOR enabled
   457                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   458                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   459                           ;	Data EEPROM Memory Code Protection bit
   460                           ;	CPD = OFF, Data EEPROM code protection off
   461                           ;	Flash Program Memory Write Enable bits
   462                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   463                           ;	In-Circuit Debugger Mode bit
   464                           ;	DEBUG = 0x1, unprogrammed default
   465                           ;	Flash Program Memory Code Protection bit
   466                           ;	CP = OFF, Code protection off
   467     2007                     	org	8199
   468     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Mar 11 19:16:26 2025

                      _X 0072                       l40 002D                       l39 002D  
                    l601 001E                      l611 0026                      l603 001F  
                    l613 0027                      l605 0020                      l615 0028  
                    l607 0024                      l617 002B                      l609 0025  
                    l619 002C                      l593 0014                      l595 001A  
                    l597 001C                      l599 001D                      _GIE 005F  
                    _RC4 003C                      _ISR 0031                     ?_ISR 0070  
                   _PEIE 005E                     i1l49 0043                     _TMR1 000E  
                   u1_20 0037                     u1_21 0036                     u2_20 003F  
                   u2_21 003E                     _main 0014                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _CCPR1 0015                    i1l621 0031                    i1l623 0037  
                  i1l625 003F                    i1l627 0041                    i1l629 0042  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0031                   ??_main 0072  
                 _CCP1M0 00B8                   _CCP1M1 00B9                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCP1IE 0462                   _CCP1IF 0062  
                 _TMR1CS 0081                   _TMR1ON 0080                   _TRISC4 043C  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 0014               __pintentry 0004                  _T1CKPS0 0084  
                _T1CKPS1 0085                  __ptext1 0031     end_of_initialization 0010  
    start_initialization 000F              __end_of_ISR 004A              __pbssCOMMON 0072  
              ___latbits 0002        interrupt_function 0004                 intlevel1 0000  
